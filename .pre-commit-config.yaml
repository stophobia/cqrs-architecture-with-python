# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

ci:
  autoupdate_schedule: monthly

repos:
  # --- Generic sanity checks (cheap/fast)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-ast
      - id: check-toml
      - id: check-yaml
      - id: check-json
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: debug-statements
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: requirements-txt-fixer
      - id: no-commit-to-branch
        args: [--branch, master, --branch, main]
      - id: double-quote-string-fixer
        files: \.py$

  # --- Code modernization
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        # Alinhado com o Black (py310)
        args: [--py310-plus]

  # --- Import cleanup (antes do isort/black)
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --expand-star-imports
          - --remove-duplicate-keys
          - --remove-unused-variables
          - --ignore-init-module-imports

  # --- Import sorting (compatível com Black)
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  # --- Formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        args: [
          --line-length, "100",
          --target-version, py310,
          --skip-string-normalization
        ]

  # --- Static analysis (flake8 primeiro, rápido)
  - repo: https://github.com/PyCQA/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        args: [--config=.flake8]

  # --- Pylint rodando em venv do pre-commit (não no sistema)
  - repo: https://github.com/PyCQA/pylint
    rev: v3.3.8
    hooks:
      - id: pylint
        # Use o .pylintrc e rode em paralelo
        args: [
          --rcfile=.pylintrc,
          -j, "0",
          --output-format=colorized
        ]
        # Limite o escopo para o seu código (evita varrer venv, etc.)
        files: ^src/.*\.py$
